form<-as.formula(paste0('survival::Surv(time=time, event =status)~',paste0(names,collapse = '+')))
return(form)
}
}
form <- mul.form(variable)(time="OS",status="EVENT",data=df)
mul.form(c('gender','age'))(time="OS",status="EVENT",data=df)
mul.form <- function(names){
function(time,status,data){
time <- data[,time]
status <- data[,status]
form<-as.formula(paste0('survival::Surv(time=time, event =status)~',paste0(names,collapse = '+')))
return(form)
}
}
mul.form(c('gender','age'))(time="OS",status="EVENT",data=df)
#' Title a form for mulcox
#'
#' @param names mulcox variable
#' @param time survival time
#' @param status survival status
#' @param data data.frame style contain variable which is factor
#' @return form a form for mulcox
#' @export
#'
#' @examples mul.form(c('gender','age'))(time="OS",status="EVENT",data=df)
df
load(df)
load("data/df.rda")
mul.form(c('gender','age'))(time="OS",status="EVENT",data=df)
form <- mul.form(variable)(time="OS",status="EVENT",data=df)
variable=names(df)[2:7]
form <- mul.form(variable)(time="OS",status="EVENT",data=df)
nomo.plot(variable,t1=1095,t2=1825,form,time="OS",status="EVENT",data=df)
nomo.plot <- function(variable,t1=1095,t2=1825,form,time=time,status=status,data){
data <- data
dd<-rms::datadist(data)
options(datadist="dd")
options(na.action="na.delete")
coxpbc<-rms::cph(formula = form,x=T,y=T,surv = T,data = data)
surv<-rms::Survival(coxpbc)
surv3<-function(x) surv(t1,x)
surv5<-function(x) surv(t2,x)
x<-rms::nomogram(coxpbc,fun = list(surv3,surv5),lp=T,
funlabel = c('3-year survival Probability','5-year survival Probability'),
maxscale = 100,fun.at = c(0.95,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1))
plot(x, lplabel="Linear Predictor",
xfrac=.35,varname.label=TRUE, varname.label.sep="=", ia.space=.2,
tck=NA, tcl=-0.20, lmgp=0.3,
points.label='Points', total.points.label='Total Points',
total.sep.page=FALSE,
cap.labels=FALSE,cex.var = 1.05,cex.axis = 1.05,lwd=5,
label.every = 1,col.grid = gray(c(0.8, 0.95)))
}
nomo.plot(variable,t1=1095,t2=1825,form,time="OS",status="EVENT",data=df)
nomo.plot <- function(variable,t1=1095,t2=1825,form,time=time,status=status,data){
dd<-rms::datadist(data)
options(datadist="dd")
options(na.action="na.delete")
coxpbc<-rms::cph(formula = form,x=T,y=T,surv = T,data = data)
surv<-rms::Survival(coxpbc)
surv3<-function(x) surv(t1,x)
surv5<-function(x) surv(t2,x)
x<-rms::nomogram(coxpbc,fun = list(surv3,surv5),lp=T,
funlabel = c('3-year survival Probability','5-year survival Probability'),
maxscale = 100,fun.at = c(0.95,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1))
plot(x, lplabel="Linear Predictor",
xfrac=.35,varname.label=TRUE, varname.label.sep="=", ia.space=.2,
tck=NA, tcl=-0.20, lmgp=0.3,
points.label='Points', total.points.label='Total Points',
total.sep.page=FALSE,
cap.labels=FALSE,cex.var = 1.05,cex.axis = 1.05,lwd=5,
label.every = 1,col.grid = gray(c(0.8, 0.95)))
}
nomo.plot(variable,t1=1095,t2=1825,form,time="OS",status="EVENT",data=df)
dd<-rms::datadist(data)
nomo.plot <- function(variable,t1=1095,t2=1825,form,time=time,status=status,data){
dd<-rms::datadist(data)
options(datadist=dd)
options(na.action="na.delete")
coxpbc<-rms::cph(formula = form,x=T,y=T,surv = T,data = data)
surv<-rms::Survival(coxpbc)
surv3<-function(x) surv(t1,x)
surv5<-function(x) surv(t2,x)
x<-rms::nomogram(coxpbc,fun = list(surv3,surv5),lp=T,
funlabel = c('3-year survival Probability','5-year survival Probability'),
maxscale = 100,fun.at = c(0.95,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1))
plot(x, lplabel="Linear Predictor",
xfrac=.35,varname.label=TRUE, varname.label.sep="=", ia.space=.2,
tck=NA, tcl=-0.20, lmgp=0.3,
points.label='Points', total.points.label='Total Points',
total.sep.page=FALSE,
cap.labels=FALSE,cex.var = 1.05,cex.axis = 1.05,lwd=5,
label.every = 1,col.grid = gray(c(0.8, 0.95)))
}
nomo.plot(variable,t1=1095,t2=1825,form,time="OS",status="EVENT",data=df)
nomo.plot <- function(variable,t1=1095,t2=1825,form,time=time,status=status,data){
dd<-rms::datadist(data)
options(datadist='dd')
options(na.action="na.delete")
coxpbc<-rms::cph(formula = form,x=T,y=T,surv = T,data = data)
surv<-rms::Survival(coxpbc)
surv3<-function(x) surv(t1,x)
surv5<-function(x) surv(t2,x)
x<-rms::nomogram(coxpbc,fun = list(surv3,surv5),lp=T,
funlabel = c('3-year survival Probability','5-year survival Probability'),
maxscale = 100,fun.at = c(0.95,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1))
plot(x, lplabel="Linear Predictor",
xfrac=.35,varname.label=TRUE, varname.label.sep="=", ia.space=.2,
tck=NA, tcl=-0.20, lmgp=0.3,
points.label='Points', total.points.label='Total Points',
total.sep.page=FALSE,
cap.labels=FALSE,cex.var = 1.05,cex.axis = 1.05,lwd=5,
label.every = 1,col.grid = gray(c(0.8, 0.95)))
}
nomo.plot(variable,t1=1095,t2=1825,form,time="OS",status="EVENT",data=df)
nomo.plot(variable,t1=1095,t2=1825,form,time="OS",status="EVENT",data=df)
nomo.plot <- function(variable,t1=1095,t2=1825,form,time=time,status=status,data=df){
dd<-rms::datadist(data)
options(datadist='dd')
options(na.action="na.delete")
coxpbc<-rms::cph(formula = form,x=T,y=T,surv = T,data = data)
surv<-rms::Survival(coxpbc)
surv3<-function(x) surv(t1,x)
surv5<-function(x) surv(t2,x)
x<-rms::nomogram(coxpbc,fun = list(surv3,surv5),lp=T,
funlabel = c('3-year survival Probability','5-year survival Probability'),
maxscale = 100,fun.at = c(0.95,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1))
plot(x, lplabel="Linear Predictor",
xfrac=.35,varname.label=TRUE, varname.label.sep="=", ia.space=.2,
tck=NA, tcl=-0.20, lmgp=0.3,
points.label='Points', total.points.label='Total Points',
total.sep.page=FALSE,
cap.labels=FALSE,cex.var = 1.05,cex.axis = 1.05,lwd=5,
label.every = 1,col.grid = gray(c(0.8, 0.95)))
}
nomo.plot(variable,t1=1095,t2=1825,form,time="OS",status="EVENT",data=df)
nomo.plot <- function(variable,t1=1095,t2=1825,form,time=time,status=status,data=df){
dd<-rms::datadist(data)
options(datadist='dd')
options(na.action="na.delete")
cox<-rms::cph(formula = form,x=T,y=T,surv = T,data = data)
surv<-rms::Survival(cox)
surv3<-function(x) surv(t1,x)
surv5<-function(x) surv(t2,x)
x<-rms::nomogram(cox,fun = list(surv3,surv5),lp=T,
funlabel = c('3-year survival Probability','5-year survival Probability'),
maxscale = 100,fun.at = c(0.95,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1))
plot(x, lplabel="Linear Predictor",
xfrac=.35,varname.label=TRUE, varname.label.sep="=", ia.space=.2,
tck=NA, tcl=-0.20, lmgp=0.3,
points.label='Points', total.points.label='Total Points',
total.sep.page=FALSE,
cap.labels=FALSE,cex.var = 1.05,cex.axis = 1.05,lwd=5,
label.every = 1,col.grid = gray(c(0.8, 0.95)))
}
nomo.plot(variable,t1=1095,t2=1825,form,time="OS",status="EVENT",data=df)
load('F:/南京小伙伴/seer_work/test_tmp.Rdata')
variable=names(tmp)[2:7]
names(tmp)
form <- mul.form(variable)(time="time",status="status",data=tmp)
nomo.plot(variable,t1=36,t2=60,form,time="time",status="status",data=tmp)
nomo.plot <- function(variable,t1=1095,t2=1825,form,time=time,status=status,data=df){
dd<<-rms::datadist(data)
options(datadist='dd')
options(na.action="na.delete")
cox<-rms::cph(formula = form,x=T,y=T,surv = T,data = data)
surv<-rms::Survival(cox)
surv3<-function(x) surv(t1,x)
surv5<-function(x) surv(t2,x)
x<-rms::nomogram(cox,fun = list(surv3,surv5),lp=T,
funlabel = c('3-year survival Probability','5-year survival Probability'),
maxscale = 100,fun.at = c(0.95,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1))
plot(x, lplabel="Linear Predictor",
xfrac=.35,varname.label=TRUE, varname.label.sep="=", ia.space=.2,
tck=NA, tcl=-0.20, lmgp=0.3,
points.label='Points', total.points.label='Total Points',
total.sep.page=FALSE,
cap.labels=FALSE,cex.var = 1.05,cex.axis = 1.05,lwd=5,
label.every = 1,col.grid = gray(c(0.8, 0.95)))
}
nomo.plot(variable,t1=1095,t2=1825,form,time="OS",status="EVENT",data=df)
form <- mul.form(variable)(time="OS",status="EVENT",data=df)
variable=names(df)[2:7]
form <- mul.form(variable)(time="OS",status="EVENT",data=df)
nomo.plot(variable,t1=1095,t2=1825,form,time="OS",status="EVENT",data=df)
variable=names(tmp)[2:7]
names(tmp)
form <- mul.form(variable)(time="time",status="status",data=tmp)
nomo.plot(variable,t1=36,t2=60,form,time="time",status="status",data=tmp)
variable <- names(df)[2:5]
#' @param time survival time
#' @param status survival status
#' @param data data.frame style contain variable which is factor
#'
#' @return
#' @export
#'
#' @examples variable <- names(df)[2:5]
#'  regnomo.plot(variable,time="OS",status="EVENT",data=df)
#'
regnomo.plot <-function(variable,time="OS",status="EVENT",data=df){
library(rms)
dd<<-rms::datadist(df)
options(datadist="dd")
options(na.action="na.delete")
form <- mul.form(variable)(time="OS",status="EVENT",data=df)
cox <- survival::coxph(formula = form , data=df)
regplot::regplot(cox,
failtime = c(1095,1825),
prfail = TRUE,
showP = T,
droplines = F,
rank="sd",
interval="confidence")
}
#' @param time survival time
#' @param status survival status
#' @param data data.frame style contain variable which is factor
#'
#' @return
#' @export
#'
#' @examples variable <- names(df)[2:5]
#'  regnomo.plot(variable,time="OS",status="EVENT",data=df)
#'
regnomo.plot <-function(variable,time="OS",status="EVENT",data=df){
dd<<-rms::datadist(data)
options(datadist="dd")
options(na.action="na.delete")
form <- mul.form(variable)(time="OS",status="EVENT",data=data)
cox <- survival::coxph(formula = form , data=data)
regplot::regplot(cox,
failtime = c(1095,1825),
prfail = TRUE,
showP = T,
droplines = F,
rank="sd",
interval="confidence")
}
regnomo.plot(variable,time="OS",status="EVENT",data=df)
variable <- names(df)[2:5]
#' @param time survival time
#' @param status survival status
#' @param data data.frame style contain variable which is factor
#'
#' @return
#' @export
#'
#' @examples variable <- names(df)[2:5]
#'  regnomo.plot(variable,time="OS",status="EVENT",data=df)
#'
regnomo.plot <-function(variable,time="OS",status="EVENT",data=df){
dd<<-rms::datadist(data)
options(datadist="dd")
options(na.action="na.delete")
form <- mul.form(variable)(time="OS",status="EVENT",data=data)
cox <- survival::coxph(formula = form , data=data)
regplot::regplot(cox,
failtime = c(1095,1825),
prfail = TRUE,
showP = T,
droplines = F,
rank="sd",
interval="confidence")
}
regnomo.plot(variable,time="OS",status="EVENT",data=df)
#' @param time survival time
#' @param status survival status
#' @param data data.frame style contain variable which is factor
#'
#' @return
#' @export
#'
#' @examples variable <- names(df)[2:5]
#'  regnomo.plot(variable,time="OS",status="EVENT",data=df)
#'
regnomo.plot <-function(variable,time="OS",status="EVENT",data=df){
dd<<-rms::datadist(data)
options(datadist="dd")
options(rms::na.action="na.delete")
form <- mul.form(variable)(time="OS",status="EVENT",data=data)
cox <- survival::coxph(formula = form , data=data)
regplot::regplot(cox,
failtime = c(1095,1825),
prfail = TRUE,
showP = T,
droplines = F,
rank="sd",
interval="confidence")
}
rms:na.action
rms:::na.action
#' @param time survival time
#' @param status survival status
#' @param data data.frame style contain variable which is factor
#'
#' @return
#' @export
#'
#' @examples variable <- names(df)[2:5]
#'  regnomo.plot(variable,time="OS",status="EVENT",data=df)
#'
regnomo.plot <-function(variable,time="OS",status="EVENT",data=df){
library(rms)
dd<<-rms::datadist(data)
options(datadist="dd")
options(na.action="na.delete")
form <- mul.form(variable)(time="OS",status="EVENT",data=data)
cox <- survival::coxph(formula = form , data=data)
regplot::regplot(cox,
failtime = c(1095,1825),
prfail = TRUE,
showP = T,
droplines = F,
rank="sd",
interval="confidence")
}
regnomo.plot(variable,time="OS",status="EVENT",data=df)
variable=names(tmp)[2:7]
names(tmp)
form <- mul.form(variable)(time="time",status="status",data=tmp)
nomo.plot <- function(variable,t1=1095,t2=1825,time=time,status=status,data=df){
dd<<-rms::datadist(data)
options(datadist='dd')
options(na.action="na.delete")
form <- mul.form(variable)(time="OS",status="EVENT",data=data)
cox<-rms::cph(formula = form,x=T,y=T,surv = T,data = data)
surv<-rms::Survival(cox)
surv3<-function(x) surv(t1,x)
surv5<-function(x) surv(t2,x)
x<-rms::nomogram(cox,fun = list(surv3,surv5),lp=T,
funlabel = c('3-year survival Probability','5-year survival Probability'),
maxscale = 100,fun.at = c(0.95,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1))
plot(x, lplabel="Linear Predictor",
xfrac=.35,varname.label=TRUE, varname.label.sep="=", ia.space=.2,
tck=NA, tcl=-0.20, lmgp=0.3,
points.label='Points', total.points.label='Total Points',
total.sep.page=FALSE,
cap.labels=FALSE,cex.var = 1.05,cex.axis = 1.05,lwd=5,
label.every = 1,col.grid = gray(c(0.8, 0.95)))
}
nomo.plot(variable,t1=1095,t2=1825,time="OS",status="EVENT",data=df)
nomo.plot <- function(variable,t1=1095,t2=1825,time=time,status=status,data=df){
dd<<-rms::datadist(data)
options(datadist='dd')
options(na.action="na.delete")
form <- mul.form(variable)(time="OS",status="EVENT",data=data)
cox<-rms::cph(formula = form,x=T,y=T,surv = T,data = data)
surv<-rms::Survival(cox)
surv3<-function(x) surv(t1,x)
surv5<-function(x) surv(t2,x)
x<-rms::nomogram(cox,fun = list(surv3,surv5),lp=T,
funlabel = c('3-year survival Probability','5-year survival Probability'),
maxscale = 100,fun.at = c(0.95,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1))
plot(x, lplabel="Linear Predictor",
xfrac=.35,varname.label=TRUE, varname.label.sep="=", ia.space=.2,
tck=NA, tcl=-0.20, lmgp=0.3,
points.label='Points', total.points.label='Total Points',
total.sep.page=FALSE,
cap.labels=FALSE,cex.var = 1.05,cex.axis = 1.05,lwd=5,
label.every = 1,col.grid = gray(c(0.8, 0.95)))
}
nomo.plot(variable,t1=1095,t2=1825,time="OS",status="EVENT",data=df)
variable=names(df)[2:7]
variable
nomo.plot(variable,t1=1095,t2=1825,time="OS",status="EVENT",data=df)
variable=names(tmp)[2:7]
names(tmp)
nomo.plot(variable,t1=36,t2=60,time="time",status="status",data=tmp)
nomo.plot <- function(variable,t1=1095,t2=1825,form,time=time,status=status,data=df){
dd<<-rms::datadist(data)
options(datadist='dd')
options(na.action="na.delete")
cox<-rms::cph(formula = form,x=T,y=T,surv = T,data = data)
surv<-rms::Survival(cox)
surv3<-function(x) surv(t1,x)
surv5<-function(x) surv(t2,x)
x<-rms::nomogram(cox,fun = list(surv3,surv5),lp=T,
funlabel = c('3-year survival Probability','5-year survival Probability'),
maxscale = 100,fun.at = c(0.95,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1))
plot(x, lplabel="Linear Predictor",
xfrac=.35,varname.label=TRUE, varname.label.sep="=", ia.space=.2,
tck=NA, tcl=-0.20, lmgp=0.3,
points.label='Points', total.points.label='Total Points',
total.sep.page=FALSE,
cap.labels=FALSE,cex.var = 1.05,cex.axis = 1.05,lwd=5,
label.every = 1,col.grid = gray(c(0.8, 0.95)))
}
variable=names(df)[2:7]
form <- mul.form(variable)(time="OS",status="EVENT",data=df)
nomo.plot(variable,t1=1095,t2=1825,form,time="OS",status="EVENT",data=df)
variable=names(tmp)[2:7]
names(tmp)
form <- mul.form(variable)(time="time",status="status",data=tmp)
nomo.plot(variable,t1=36,t2=60,form,time="time",status="status",data=tmp)
variable=names(tmp)[2:7]
names(tmp)
form <- mul.form(variable)(time="time",status="status",data=tmp)
regnomo.plot(variable,t1=36,t2=60,form,time="time",status="status",data=tmp)
regnomo.plot(variable,,t1=36,t2=60,form,time="time",status="status",data=tmp)
#' @param time survival time
#' @param status survival status
#' @param data data.frame style contain variable which is factor
#'
#' @return
#' @export
#'
#' @examples variable <- names(df)[2:5]
#'  regnomo.plot(variable,time="OS",status="EVENT",data=df)
#'
regnomo.plot <-function(variable,time="OS",status="EVENT",data=df){
library(rms)
dd<<-rms::datadist(data)
options(datadist="dd")
options(na.action="na.delete")
cox <- survival::coxph(formula = form , data=data)
regplot::regplot(cox,
failtime = c(t1,t2),
prfail = TRUE,
showP = T,
droplines = F,
rank="sd",
interval="confidence")
}
regnomo.plot(variable,,t1=36,t2=60,form,time="time",status="status",data=tmp)
#' @param time survival time
#' @param status survival status
#' @param data data.frame style contain variable which is factor
#'
#' @return
#' @export
#'
#' @examples variable <- names(df)[2:5]
#'  regnomo.plot(variable,time="OS",status="EVENT",data=df)
#'
regnomo.plot <-function(variable,time="OS",status="EVENT",t1,t2,data=df){
library(rms)
dd<<-rms::datadist(data)
options(datadist="dd")
options(na.action="na.delete")
cox <- survival::coxph(formula = form , data=data)
regplot::regplot(cox,
failtime = c(t1,t2),
prfail = TRUE,
showP = T,
droplines = F,
rank="sd",
interval="confidence")
}
regnomo.plot(variable,,t1=36,t2=60,form,time="time",status="status",data=tmp)
#' @param time survival time
#' @param status survival status
#' @param data data.frame style contain variable which is factor
#'
#' @return
#' @export
#'
#' @examples variable <- names(df)[2:5]
#'  regnomo.plot(variable,time="OS",status="EVENT",data=df)
#'
regnomo.plot <-function(variable,time="OS",status="EVENT",form,t1,t2,data=df){
library(rms)
dd<<-rms::datadist(data)
options(datadist="dd")
options(na.action="na.delete")
cox <- survival::coxph(formula = form , data=data)
regplot::regplot(cox,
failtime = c(t1,t2),
prfail = TRUE,
showP = T,
droplines = F,
rank="sd",
interval="confidence")
}
regnomo.plot(variable,,t1=36,t2=60,form,time="time",status="status",data=tmp)
#' @param time survival time
#' @param status survival status
#' @param data data.frame style contain variable which is factor
#'
#' @return
#' @export
#'
#' @examples variable <- names(df)[2:5]
#'  regnomo.plot(variable,time="OS",status="EVENT",data=df)
#'
regnomo.plot <-function(variable,time="OS",status="EVENT",form,t1,t2,data=df){
library(rms)
dd<<-rms::datadist(data)
options(datadist="dd")
options(na.action="na.delete")
cox <- survival::coxph(formula = form , data=data)
regplot::regplot(cox,
failtime = c(t1,t2),
prfail = TRUE,
showP = T,
droplines = F,
rank="sd",
interval="confidence")
}
regnomo.plot(variable,time="OS",status="EVENT",data=df)
regnomo.plot(variable,t1=36,t2=60,form,time="time",status="status",data=tmp)
variable <- names(df)[2:5]
form <- mul.form(variable)(time="OS",status="EVENT",data=df)
regnomo.plot(variable,t1=1095,t2=1825,form,time="OS",status="EVENT",data=df)
regnomo.plot(variable,t1=1095,t2=1825,form=form,time="OS",status="EVENT",data=df)
variable=names(tmp)[2:7]
names(tmp)
form <- mul.form(variable)(time="time",status="status",data=tmp)
regnomo.plot(variable,t1=36,t2=60,form,time="time",status="status",data=tmp)
devtools::document()
devtools::build()
library(tss.lm)
